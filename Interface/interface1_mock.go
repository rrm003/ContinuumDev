// Code generated by MockGen. DO NOT EDIT.
// Source: interface1.go

package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockshape is a mock of shape interface
type Mockshape struct {
	ctrl     *gomock.Controller
	recorder *MockshapeMockRecorder
}

// MockshapeMockRecorder is the mock recorder for Mockshape
type MockshapeMockRecorder struct {
	mock *Mockshape
}

// NewMockshape creates a new mock instance
func NewMockshape(ctrl *gomock.Controller) *Mockshape {
	mock := &Mockshape{ctrl: ctrl}
	mock.recorder = &MockshapeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *Mockshape) EXPECT() *MockshapeMockRecorder {
	return _m.recorder
}

// area mocks base method
func (_m *Mockshape) area() float64 {
	ret := _m.ctrl.Call(_m, "area")
	ret0, _ := ret[0].(float64)
	return ret0
}

// area indicates an expected call of area
func (_mr *MockshapeMockRecorder) area() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "area", reflect.TypeOf((*Mockshape)(nil).area))
}

// perimeter mocks base method
func (_m *Mockshape) perimeter() float64 {
	ret := _m.ctrl.Call(_m, "perimeter")
	ret0, _ := ret[0].(float64)
	return ret0
}

// perimeter indicates an expected call of perimeter
func (_mr *MockshapeMockRecorder) perimeter() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "perimeter", reflect.TypeOf((*Mockshape)(nil).perimeter))
}
